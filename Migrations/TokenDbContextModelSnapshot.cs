// <auto-generated />
using System;
using AnalyzerCore.DbLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AnalyzerCore.Migrations
{
    [DbContext(typeof(TokenDbContext))]
    partial class TokenDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("AnalyzerCore.DbLayer.Models+Exchange", b =>
                {
                    b.Property<int>("ExchangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TokenEntityTokenId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ExchangeId");

                    b.HasIndex("TokenEntityTokenId");

                    b.ToTable("Exchanges");
                });

            modelBuilder.Entity("AnalyzerCore.DbLayer.Models+Pool", b =>
                {
                    b.Property<int>("PoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TokenEntityTokenId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PoolId");

                    b.HasIndex("TokenEntityTokenId");

                    b.ToTable("Pools");
                });

            modelBuilder.Entity("AnalyzerCore.DbLayer.Models+TokenEntity", b =>
                {
                    b.Property<int>("TokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("From")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeflationary")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Notified")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TelegramMsgId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("To")
                        .HasColumnType("TEXT");

                    b.Property<string>("TokenAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("TokenSymbol")
                        .HasColumnType("TEXT");

                    b.Property<int>("TxCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("TokenId");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("AnalyzerCore.DbLayer.Models+TransactionHash", b =>
                {
                    b.Property<int>("HashId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Hash")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TokenEntityTokenId")
                        .HasColumnType("INTEGER");

                    b.HasKey("HashId");

                    b.HasIndex("TokenEntityTokenId");

                    b.ToTable("TransactionHashes");
                });

            modelBuilder.Entity("AnalyzerCore.DbLayer.Models+Exchange", b =>
                {
                    b.HasOne("AnalyzerCore.DbLayer.Models+TokenEntity", "TokenEntity")
                        .WithMany("Exchanges")
                        .HasForeignKey("TokenEntityTokenId");

                    b.Navigation("TokenEntity");
                });

            modelBuilder.Entity("AnalyzerCore.DbLayer.Models+Pool", b =>
                {
                    b.HasOne("AnalyzerCore.DbLayer.Models+TokenEntity", "TokenEntity")
                        .WithMany("Pools")
                        .HasForeignKey("TokenEntityTokenId");

                    b.Navigation("TokenEntity");
                });

            modelBuilder.Entity("AnalyzerCore.DbLayer.Models+TransactionHash", b =>
                {
                    b.HasOne("AnalyzerCore.DbLayer.Models+TokenEntity", "TokenEntity")
                        .WithMany("TransactionHashes")
                        .HasForeignKey("TokenEntityTokenId");

                    b.Navigation("TokenEntity");
                });

            modelBuilder.Entity("AnalyzerCore.DbLayer.Models+TokenEntity", b =>
                {
                    b.Navigation("Exchanges");

                    b.Navigation("Pools");

                    b.Navigation("TransactionHashes");
                });
#pragma warning restore 612, 618
        }
    }
}
